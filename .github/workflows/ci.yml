name: CI

on:
  pull_request:
    branches: [ main ]
  push:
    branches: [ main ]
  workflow_dispatch:

# Prevent multiple deployments running at the same time
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

env:
  NODE_VERSION: '22'
  POSTGRES_USER: postgres
  POSTGRES_PASSWORD: postgres
  POSTGRES_DB: chatgenius_test
  DATABASE_URL: postgresql://postgres:postgres@localhost:5432/chatgenius_test?sslmode=disable
  NEXT_PUBLIC_API_URL: http://localhost:3001
  CLIENT_URL: http://localhost:3000
  API_HOST: 0.0.0.0
  CLIENT_HOST: 0.0.0.0
  CYPRESS_BASE_URL: http://localhost:3000
  CYPRESS_API_URL: http://localhost:3001
  CYPRESS_INSTALL_BINARY: 0

jobs:
  lint:
    name: Lint
    runs-on: ubuntu-22.04
    timeout-minutes: 10
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      
      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
      
      - name: Disable telemetry
        run: |
          yarn config set --home enableTelemetry 0
          npx next telemetry disable
      
      - name: Cache dependencies
        uses: actions/cache@v3
        with:
          path: |
            **/node_modules
            ~/.npm
            ~/.cache/yarn
          key: ${{ runner.os }}-node-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-node-
      
      - name: Install dependencies
        run: |
          npm install -g yarn
          yarn install
      
      - name: Setup environment
        run: yarn setup:env
      
      - name: Run lint
        run: yarn lint

  test-unit:
    name: Unit Tests
    runs-on: ubuntu-22.04
    timeout-minutes: 15
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      
      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
      
      - name: Disable telemetry
        run: |
          yarn config set --home enableTelemetry 0
          npx next telemetry disable
      
      - name: Cache dependencies
        uses: actions/cache@v3
        with:
          path: |
            **/node_modules
            ~/.npm
            ~/.cache/yarn
          key: ${{ runner.os }}-node-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-node-
      
      - name: Install dependencies
        run: |
          npm install -g yarn
          yarn install

      - name: Setup environment
        run: yarn setup:env
      
      - name: Run unit tests
        run: yarn test:unit
      
      - name: Upload test results
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: test-results
          path: |
            **/coverage
            **/test-results
          retention-days: 7

  # Add a job that runs when all tests pass
  notify:
    name: Notify Success
    needs: [lint, test-unit]
    runs-on: ubuntu-22.04
    if: success()
    steps:
      - name: Mark success
        run: echo "All tests passed successfully!" 